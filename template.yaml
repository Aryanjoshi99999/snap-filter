AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  snap-filter
  A serverless application that resizes images uploaded to S3.

Resources:
  # Dead-letter queue for messages that keep failing
  ImageProcessingDLQ:
    Type: AWS::SQS::Queue

  # Main queue for S3 notifications (no queue policy here to avoid circular dependency)
  ImageProcessingQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 120        # must be > Lambda timeout
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt ImageProcessingDLQ.Arn
        maxReceiveCount: "5"

  # Bucket for original uploads. Notification configuration will be applied after stack deploy.
  ImageUploadBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  # Bucket for thumbnails/resized images
  ThumbnailBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  # Table for labels 
  ImageAnalysisTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ImageAnalysisResults
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: ImageId
          AttributeType: S
      KeySchema:
        - AttributeName: ImageId
          KeyType: HASH


  # Lambda to process images (triggered by SQS)
  ImageProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: app.handler
      Runtime: python3.12
      MemorySize: 256
      Timeout: 30
      Policies:
        # Allows Lambda to poll messages from the SQS queue (receive/delete)
        - SQSPollerPolicy:
            QueueName: !GetAtt ImageProcessingQueue.QueueName
        # Allows reading from the upload bucket
        - S3ReadPolicy:
            BucketName: !Ref ImageUploadBucket
        # Allows writing to the thumbnail bucket
        - S3WritePolicy:
            BucketName: !Ref ThumbnailBucket
        - DynamoDBWritePolicy:
            TableName: !Ref ImageAnalysisTable
        - Statement:
            - Effect: Allow
              Action:
                - rekognition:DetectLabels
              Resource: "*"
      Environment:
        Variables:
          DESTINATION_BUCKET: !Ref ThumbnailBucket
          RESULTS_TABLE: !Ref ImageAnalysisTable
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt ImageProcessingQueue.Arn
            BatchSize: 1

Outputs:
  ImageUploadBucketName:
    Description: "Name of the S3 bucket for image uploads"
    Value: !Ref ImageUploadBucket

  ThumbnailBucketName:
    Description: "Name of the S3 bucket for resized thumbnails"
    Value: !Ref ThumbnailBucket

  ImageProcessingQueueArn:
    Description: "ARN of the SQS queue receiving S3 notifications"
    Value: !GetAtt ImageProcessingQueue.Arn

  ImageProcessingQueueUrl:
    Description: "URL of the SQS queue"
    Value: !Ref ImageProcessingQueue

  ImageAnalysisTableName:
    Description: "Name of DynamoDB table storing AI analysis results"
    Value: !Ref ImageAnalysisTable
